name: Testing suite

on:
    push:
        branches:
            - master
            - dev
    pull_request:
        branches:
            - master

jobs:
    unit-tests-on-each-php-version:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest]
                php-versions: ['7.1', '7.2', '7.3', '7.4']
        name: PHP ${{ matrix.php-versions }} Test on ${{ matrix.os }}
        steps:
            - name: Check out repository
              uses: actions/checkout@v2

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php-versions }}
                  extensions: mbstring, intl, zip

            - name: Composer install
              run: (rm composer.lock || true) &&  composer update

            - name: PHP version
              run: php --version

            - name: Run phpstan
              run: make phpstan > phpstan.analyse.txt

            - name: Upload phpstan analyse result
              uses: actions/upload-artifact@v2
              with:
                  name: phpstan
                  path: phpstan.analyse.txt

            - name: Run tests
              run: make tests-unit
              env:
                  API_ENDPOINT: ${{ secrets.API_ENDPOINT }}
                  API_KEY: ${{ secrets.API_KEY }}
                  API_PASSPHRASE: ${{ secrets.API_PASSPHRASE }}
                  API_SECRET: ${{ secrets.API_SECRET }}
#    func-tests-on-last-php-version:
#        runs-on: ${{ matrix.os }}
#        strategy:
#            matrix:
#                os: [ubuntu-latest]
#                php-versions: ['7.4']
#        name: PHP ${{ matrix.php-versions }} Test on ${{ matrix.os }}
#        steps:
#            -   name: Check out repository
#                uses: actions/checkout@v2
#
#            -   name: Setup PHP
#                uses: shivammathur/setup-php@v2
#                with:
#                    php-version: ${{ matrix.php-versions }}
#                    extensions: mbstring, intl, zip
#
#            -   name: Composer install
#                run: rm composer.lock && composer install
#
#            -   name: PHP version
#                run: php --version
#
#            -   name: Run tests
#                run: make tests-functional
#                env:
#                    API_ENDPOINT: ${{ secrets.API_ENDPOINT }}
#                    API_KEY: ${{ secrets.API_KEY }}
#                    API_PASSPHRASE: ${{ secrets.API_PASSPHRASE }}
#                    API_SECRET: ${{ secrets.API_SECRET }}
